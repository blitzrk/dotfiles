# Based on
# http://robots.thoughtbot.com/tmux-copy-paste-on-os-x-a-better-future
#
# Defaults
unbind-key -a
bind d detach-client
bind C-a send-keys "C-a"
bind : command-prompt
bind t clock-mode
bind z resize-pane -Z
bind D choose-client
bind s choose-session
bind c new-window
bind n next-window

# Restore sessions
set -g @resurrect-strategy-vim 'session'
set -g @continuum-restore 'on'

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
# unbind -t vi-copy Enter
# bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"
#
############################################################################
############################################################################
# Reset Prefix
############################################################################
set -g prefix C-a
bind-key a send-prefix # for nested tmux sessions

############################################################################
# Global options
############################################################################
# large history
set -g history-limit 10000

# colors
set -g mode-bg white
set -g message-bg cyan
set -g message-fg white
set -g default-terminal "screen-256color" #"xterm-256color" # "screen-256color"
set -g pane-active-border-fg green

# utf8 support
# setw -g utf8 on

# basic settings
setw -g xterm-keys on # for vim
setw -g mode-keys vi # vi key
bind -t vi-copy 'v' begin-selection
bind -t vi-copy 'y' copy-selection
setw -g monitor-activity on
setw -g window-status-current-attr reverse

# Automatically set window title
setw -g automatic-rename

# Turn off mouse
set -g mouse off
#set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# Set clock
set -g clock-mode-style 12

# vi movement keys
# set-option -g status-keys vi

############################################################################
# Status Bar
############################################################################
# set-option -g status-utf8 on
set-option -g status-justify right
set-option -g status-bg black # colour213 # pink
set-option -g status-fg cyan
set-option -g status-interval 5
set-option -g status-left-length 30
set-option -g status-right-length 80
set-option -g status-left '#[fg=magenta]» #[fg=blue,bold]#T#[default]'
set-option -g status-right '#[fg=red,bold][[ #(git branch) branch ]] #[fg=cyan]»» #[fg=blue,bold]###S #[fg=magenta]%R %m-%d#(acpi | cut -d ',' -f 2)#[default]'
set-option -g visual-activity on

# Titles (window number, program name, active (or not)
set-option -g set-titles on
set-option -g set-titles-string '#H:#S.#I.#P #W #T'


############################################################################
# Unbindings
############################################################################
#unbind [ # copy mode bound to escape key
unbind j
unbind C-b # unbind default leader key
unbind '"' # unbind horizontal split
unbind %   # unbind vertical split


############################################################################
# Bindings
############################################################################
# reload tmux conf
bind-key r source-file ~/.tmux.conf \; display "Reloaded!"

bind C-w copy-mode
bind p paste-buffer
bind P choose-buffer "paste-buffer -b '%%'"
# bind -n BSpace send-keys 'C-?'

# clear screen
bind -n M-l send-keys 'C-l'

# new split in current pane (horizontal / vertical)
bind-key - split-window -v # split pane horizontally
bind-key \ split-window -h # split pane vertically

# list panes
# bind-key Space list-panes

# break-pane
bind-key Enter break-pane

# join-pane [-dhv] [-l size | -p percentage] [-s src-pane]
# [-t:dst-window.dst-pane] (destination window (dot) destination pane
#                (alias: joinp)
#
#bind C-j command-prompt "joinp"
#bind C-j command-prompt "join-pane"
#bind-key j command-prompt "join-pane -s '%%'"
#bind-key j command-prompt "joinp -t:0"
bind-key Space command-prompt "joinp -t:%%" # %% = prompt for window.pane [-V|H] # vert|hor split

#previous pane
#bind-key -n C-up prev
#bind-key -n C-left prev

#next pane
#bind-key -n C-right next
#bind-key -n C-down next

############################################################################
# windows
############################################################################
bind C-b previous-window
bind C-n next-window
bind-key C-p last-window
bind A command-prompt "rename-window %%"
# By default, all windows in a session are constrained to the size of the
# smallest client connected to that session,
# even if both clients are looking at different windows.
# It seems that in this particular case, Screen has the better default
# where a window is only constrained in size if a smaller client
# is actively looking at it.
setw -g aggressive-resize on

############################################################################
# panes
############################################################################
# Navigation ---------------------------------------------------------------
# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
# use the vim motion keys to move between panes
# bind-key h select-pane -L
# bind-key j select-pane -D
# bind-key k select-pane -U
# bind-key l select-pane -R

# Resizing ---------------------------------------------------------------
bind-key -r C-H resize-pane -L
bind-key -r C-J resize-pane -D
bind-key -r C-K resize-pane -U
bind-key -r C-L resize-pane -R

# use vim motion keys while in copy mode
setw -g mode-keys vi

############################################################################
# layouts
############################################################################
bind o select-layout "active-only"
bind M-- select-layout "even-vertical"
bind M-| select-layout "even-horizontal"
bind M-r rotate-window

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
